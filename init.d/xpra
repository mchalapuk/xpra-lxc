#! /bin/sh
### BEGIN INIT INFO
# Provides:          xpra
# Required-Start:    Xorg pulseaudio
# Required-Stop:     Xorg pulseaudio
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Xpra server
# Description:       Xpra server for display :100
#                    (requires Xorg on :100)
### END INIT INFO

# Author: Maciej Cha≈Çapuk <maciej@chalapuk.pl>
# Do NOT "set -e"

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Xpra server"
NAME=xpra
DAEMON=/usr/bin/$NAME
TTY="100"
HOSTNAME=`cat /etc/hostname`
USERNAME=shared
SHARED_DIR="/shared/$HOSTNAME/$NAME"
BIND_PORT=8080
DAEMON_ARGS=" \
  --use-display \
  --speaker \
  --microphone \
  --no-sharing \
  --bind-tcp=0.0.0.0:$BIND_PORT \
  --socket-dir=$SHARED_DIR \
  --no-pulseaudio \
"
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh
VERBOSE=true

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start() {
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
        do_status && return 1
	sudo -u $USERNAME -g $USERNAME -H \
		$DAEMON start :$TTY $DAEMON_ARGS >/dev/null 2>&1
	do_status || return 2

	LISTENING=0
	for TIMEOUT in 1 2 5 8
	do
		nc -w 1 -z localhost $BIND_PORT && LISTENING=1 && break
		sleep $TIMEOUT
	done
	test $LISTENING -eq 1 || return 2
}

#
# Function that stops the daemon/service
#
do_stop() {
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
        do_status || return 1
	sudo -u $USERNAME -g $USERNAME -H $DAEMON \
		stop :$TTY $DAEMON_ARGS >/dev/null
	do_status && return 2 || return 0
}

#
# Function that checks status of daemon/service
#
do_status() {
	# Return
	#   0 if daemon is running
	#   1 if daemon is not running
	test -n "`sudo -u $USERNAME -g $USERNAME $DAEMON list $DAEMON_ARGS \
		| grep :$TTY`" && return 0 || return 1
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	do_status
	case "$?" in
		0) [ "$VERBOSE" != no ] && \
			log_success_msg "$NAME is running"; exit 0 ;;
		*) [ "$VERBOSE" != no ] && \
			log_failure_msg "$NAME is not running"; exit 1 ;;
	esac

	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:

